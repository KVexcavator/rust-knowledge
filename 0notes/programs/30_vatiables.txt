Концепции программирования
====================
Переменные
programs/30/variables
Переменные являются неизменяемыми только по умолчанию, делают их изменяемыми, доба­вив ключевое слово mut перед именем переменной
---------------------
Различия между переменными и константами
- нельзя использовать ключевое слово mut
- const для обьявления, вместо let? тип должен быть анотирован
- можно обьявить в люлой области видимости
const MAX_POINTS: u32 = 100_000;
---------------------
Затенение
- Обьвление новой переменной с тем же именем, новая заменяет старую
- Используя let, можно выполнить несколько трансформаций значения, но при этом после завер­шения трансформаций переменная будет неизменяемой.
- одновременно может быть изсенен тип
=====================
Типы данных
=====================
Скалярные типы
представляет одно значение.
---------------------
Целочисленные типы
Длина   Знаковый    Беззнаковый
8 бит   i8          u8
16 бит  i16         u16
32 бит  i32         u32
64 бит  i64         u64
128 бит i128        u128
arch    isize       usize
*знаковый может иметь знак + или -
*беззнаковый может быть только положительным
---------------------
Целочисленные литералы в Rust
Числовые литералы     Пример
Десятичные            98_222
Шестнадцатеричные     0xff
Восьмеричные          0o77
Двоичные              0b1111_0000
Байтовый (только u8)  b 'A'
---------------------
Типы с плавающей точкой
f32 и f64, если явно не указывать то по умолчанию f64
---------------------
Числовые операции
+,-,*,/,%(remainder)
---------------------
Булев тип
true, false
---------------------
Символьный тип
задаются одинарными кавычками
let c = 'z';
=====================
Составные типы 
группируют многочисленные значения в один тип
---------------------
Кортежный тип
- способ группирования ряда  значений с разнообразными типами в один составной тип
- имеют фиксированную длину
let tup: (i32, f64, u8) = (500, 6.4, 1);
----------------------
Массив
let a = [1, 2, 3, 4, 5];
let a: [i32; 5] = [1, 2, 3, 4, 5];
- каждый элемент массива должен иметь один и тот же тип
- Вектор — это массив, который может увеличиваться или уменьшаться в размере

