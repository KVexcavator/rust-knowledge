Обработка ошибок
В Rust нет исключений:
- тип Result<T, E> для устранимых ошибок
- panic!, для не устранимых ошибок
====================================
Неустранимые ошибки и макрокоманда panic!
При выполнении макро­команды panic! программа будет печатать сообщение об ошибке, размотает и очи­стит стек, а затем завершит работу.
------------------------------------
Если в проекте нужно сделать результирующий двоичный файл как можно меньше, то при возникновении паники вы можете переключиться с разматывания на прерывание
В файле Cargo.toml в разделе [profile], например:
[profile.release]
panic = 'abort'

pfnic! вызывает явно программистом
  panic!...
либо при из потрохов другодо задействонного кода,
тогда можно отследить с трасировкой
RUST_BACKTRACE=1 cargo run
Обратная трассировка — это список всех функций, которые были вызваны, чтобы добраться до этой точки.
