Удаление повторов путем извлечения функции
delete dublicates
=========================
Обобщенные типы данных
generic data types
В качестве имени типового параметра можно использовать любой идентификатор.
По умолчанию большинство программи­стов, пишущих на Rust, выбирают T — «тип».
fn largest<T>(list: &[T]) -> T {...}
=========================
Типажи: определение совместного поведения
-------------------------
Типаж сообщает компилятору языка Rust о функциональности, которой обладает
тот или иной тип и которой он может делиться с другими типами.
* Типажи похожи интерфейсы
--------------------------
Определение типажа
- Поведение типа состоит из методов, которые мы вызываем для этого типа.
- Разные типы имеют одинаковое поведение, если мы вызываем одинаковые методы для всех этих типов. 
- Определения типажей являются способом группирования вместе сигнатур методов с целью описания множества поведений.

pub trait Summary {
  fn summarize(&self) -> String;
}

Компиля­тор обеспечит, чтобы в любом типе, который имеет типаж Summary, был определен метод summarize именно с такой сигнатурой.
------------------------
Типажи в качестве параметров и возврадаемых данных
здесь применяется синтаксис impl Trait