fn main() {
    let mut x = 5;
    println!("–ó–Ω–∞—á–µ–Ω–∏–µ —Ö —Ä–∞–≤–Ω–æ {}", x);
    x = 6;
    println!("–ó–Ω–∞—á–µ–Ω–∏–µ —Ö —Ä–∞–≤–Ω–æ {}", x);

    // –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    let y = 5;
    let y = y + 1;
    let y = y * 1;
    println!("–ó–Ω–∞—á–µ–Ω–∏–µ y —Ä–∞–≤–Ω–æ {}", y);

    // –¢–∏–ø—ã —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
    let a = 2.0; // f64
    let b: f32 = 3.0; // f32

    // –ß–∏—Å–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    let sum = 5 + 10;
    let difference = 95.5 - 4.3;
    let product = 4 * 30;
    let quotient = 56.7 / 32.2;
    let remainder = 43 % 5;

    // –ë—É–ª–µ–≤ —Ç–∏–ø
    let t = true;
    let f: bool = false;

    // –°–∏–º–≤–æ–ª—å–Ω—ã–π —Ç–∏–ø char
    let c = 'z';
    let z = '∆∂';
    let heart_eyed_cat = 'üòª';

    // –ö–æ—Ä—Ç–µ–∂–Ω—ã–π —Ç–∏–ø
    let tup = (500, 6.4, 1);
    let (first, second, third) = tup;
    println!("–ó–Ω–∞—á–µ–Ω–∏–µ second —Ä–∞–≤–Ω–æ {}", second);
    //—Å –ø–æ–º–æ—â—å—é —Ç–æ—á¬≠–∫–∏ (.) –∏ –∏–Ω–¥–µ–∫—Å–∞
    let bomba: (i32, f64, u8) = (500, 6.4, 1);
    let five_hundred = bomba.0;
    let six_point_four = bomba.1
    let one = bomba.2

    // –ú–∞—Å—Å–∏–≤
    let arr_first = [1, 2, 3, 4, 5];
    let arr_second: [i32; 5] = [1, 2, 3, 4, 5];
}
